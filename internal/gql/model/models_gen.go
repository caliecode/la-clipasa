// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

import (
	"entgo.io/contrib/entgql"
	"github.com/99designs/gqlgen/graphql"
	"github.com/caliecode/la-clipasa/internal/ent/generated"
	"github.com/caliecode/la-clipasa/internal/ent/generated/postcategory"
	"github.com/google/uuid"
)

type SearchResult interface {
	IsSearchResult()
}

// Return response for createBulkApiKey mutation
type APIKeyBulkCreatePayload struct {
	// Created apiKeys
	APIKeys []*generated.ApiKey `json:"apiKeys,omitempty"`
}

// Return response for createApiKey mutation
type APIKeyCreatePayload struct {
	// Created apiKey
	APIKey *generated.ApiKey `json:"apiKey"`
}

// Return response for deleteApiKey mutation
type APIKeyDeletePayload struct {
	// Deleted apiKey ID
	DeletedID uuid.UUID `json:"deletedID"`
}

// Return response for updateApiKey mutation
type APIKeyUpdatePayload struct {
	// Updated apiKey
	APIKey *generated.ApiKey `json:"apiKey"`
}

// Return response for createBulkComment mutation
type CommentBulkCreatePayload struct {
	// Created comments
	Comments []*generated.Comment `json:"comments,omitempty"`
}

// Return response for createComment mutation
type CommentCreatePayload struct {
	// Created comment
	Comment *generated.Comment `json:"comment"`
}

// Return response for deleteComment mutation
type CommentDeletePayload struct {
	// Deleted comment ID
	DeletedID uuid.UUID `json:"deletedID"`
}

// Return response for updateComment mutation
type CommentUpdatePayload struct {
	// Updated comment
	Comment *generated.Comment `json:"comment"`
}

type CreatePostWithCategoriesInput struct {
	Base       *generated.CreatePostInput `json:"base"`
	Categories []postcategory.Category    `json:"categories,omitempty"`
	Video      *graphql.Upload            `json:"video,omitempty"`
}

// Return response for createBulkPost mutation
type PostBulkCreatePayload struct {
	// Created posts
	Posts []*generated.Post `json:"posts,omitempty"`
}

// Return response for createBulkPostCategory mutation
type PostCategoryBulkCreatePayload struct {
	// Created postCategorys
	PostCategories []*generated.PostCategory `json:"postCategories,omitempty"`
}

// Return response for createPostCategory mutation
type PostCategoryCreatePayload struct {
	// Created postCategory
	PostCategory *generated.PostCategory `json:"postCategory"`
}

// Return response for deletePostCategory mutation
type PostCategoryDeletePayload struct {
	// Deleted postCategory ID
	DeletedID uuid.UUID `json:"deletedID"`
}

// Return response for updatePostCategory mutation
type PostCategoryUpdatePayload struct {
	// Updated postCategory
	PostCategory *generated.PostCategory `json:"postCategory"`
}

// Return response for createPost mutation
type PostCreatePayload struct {
	// Created post
	Post *generated.Post `json:"post"`
}

// Return response for deletePost mutation
type PostDeletePayload struct {
	// Deleted post ID
	DeletedID uuid.UUID `json:"deletedID"`
}

// Return response for updatePost mutation
type PostUpdatePayload struct {
	// Updated post
	Post *generated.Post `json:"post"`
}

type SearchResultConnection struct {
	// Information to aid in pagination.
	Page *entgql.PageInfo[uuid.UUID] `json:"page"`
	// Identifies the total count of items in the connection.
	TotalCount int `json:"totalCount"`
	// A list of nodes with results.
	Nodes []SearchResult `json:"nodes"`
}

// Return response for createBulkUser mutation
type UserBulkCreatePayload struct {
	// Created users
	Users []*generated.User `json:"users,omitempty"`
}

// Return response for createUser mutation
type UserCreatePayload struct {
	// Created user
	User *generated.User `json:"user"`
}

// Return response for deleteUser mutation
type UserDeletePayload struct {
	// Deleted user ID
	DeletedID uuid.UUID `json:"deletedID"`
}

type UserSearchResult struct {
	Users []*generated.User `json:"users,omitempty"`
}

func (UserSearchResult) IsSearchResult() {}

type UserTwitchInfo struct {
	IsSubscriber  *bool `json:"isSubscriber,omitempty"`
	IsFollower    *bool `json:"isFollower,omitempty"`
	IsBroadcaster *bool `json:"isBroadcaster,omitempty"`
	IsBanned      *bool `json:"isBanned,omitempty"`
}

// Return response for updateUser mutation
type UserUpdatePayload struct {
	// Updated user
	User *generated.User `json:"user"`
}
