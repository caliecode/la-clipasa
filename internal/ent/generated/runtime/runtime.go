// Code generated by ent, DO NOT EDIT.

package runtime

import (
	"context"
	"time"

	"github.com/google/uuid"
	"github.com/caliecode/la-clipasa/internal/ent/generated/apikey"
	"github.com/caliecode/la-clipasa/internal/ent/generated/comment"
	"github.com/caliecode/la-clipasa/internal/ent/generated/post"
	"github.com/caliecode/la-clipasa/internal/ent/generated/postcategory"
	"github.com/caliecode/la-clipasa/internal/ent/generated/user"
	"github.com/caliecode/la-clipasa/internal/ent/schema"

	"entgo.io/ent"
	"entgo.io/ent/privacy"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	apikeyMixin := schema.ApiKey{}.Mixin()
	apikeyMixinHooks2 := apikeyMixin[2].Hooks()
	apikey.Hooks[0] = apikeyMixinHooks2[0]
	apikeyMixinInters2 := apikeyMixin[2].Interceptors()
	apikey.Interceptors[0] = apikeyMixinInters2[0]
	apikeyMixinFields0 := apikeyMixin[0].Fields()
	_ = apikeyMixinFields0
	apikeyMixinFields1 := apikeyMixin[1].Fields()
	_ = apikeyMixinFields1
	apikeyFields := schema.ApiKey{}.Fields()
	_ = apikeyFields
	// apikeyDescUpdatedAt is the schema descriptor for updated_at field.
	apikeyDescUpdatedAt := apikeyMixinFields0[0].Descriptor()
	// apikey.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	apikey.DefaultUpdatedAt = apikeyDescUpdatedAt.Default.(func() time.Time)
	// apikey.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	apikey.UpdateDefaultUpdatedAt = apikeyDescUpdatedAt.UpdateDefault.(func() time.Time)
	// apikeyDescCreatedAt is the schema descriptor for created_at field.
	apikeyDescCreatedAt := apikeyMixinFields0[1].Descriptor()
	// apikey.DefaultCreatedAt holds the default value on creation for the created_at field.
	apikey.DefaultCreatedAt = apikeyDescCreatedAt.Default.(func() time.Time)
	// apikeyDescID is the schema descriptor for id field.
	apikeyDescID := apikeyMixinFields1[0].Descriptor()
	// apikey.DefaultID holds the default value on creation for the id field.
	apikey.DefaultID = apikeyDescID.Default.(func() uuid.UUID)
	commentMixin := schema.Comment{}.Mixin()
	commentMixinHooks2 := commentMixin[2].Hooks()
	commentMixinHooks3 := commentMixin[3].Hooks()
	comment.Hooks[0] = commentMixinHooks2[0]
	comment.Hooks[1] = commentMixinHooks3[0]
	commentMixinInters2 := commentMixin[2].Interceptors()
	commentMixinInters3 := commentMixin[3].Interceptors()
	comment.Interceptors[0] = commentMixinInters2[0]
	comment.Interceptors[1] = commentMixinInters3[0]
	commentMixinFields0 := commentMixin[0].Fields()
	_ = commentMixinFields0
	commentMixinFields1 := commentMixin[1].Fields()
	_ = commentMixinFields1
	commentFields := schema.Comment{}.Fields()
	_ = commentFields
	// commentDescUpdatedAt is the schema descriptor for updated_at field.
	commentDescUpdatedAt := commentMixinFields0[0].Descriptor()
	// comment.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	comment.DefaultUpdatedAt = commentDescUpdatedAt.Default.(func() time.Time)
	// comment.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	comment.UpdateDefaultUpdatedAt = commentDescUpdatedAt.UpdateDefault.(func() time.Time)
	// commentDescCreatedAt is the schema descriptor for created_at field.
	commentDescCreatedAt := commentMixinFields0[1].Descriptor()
	// comment.DefaultCreatedAt holds the default value on creation for the created_at field.
	comment.DefaultCreatedAt = commentDescCreatedAt.Default.(func() time.Time)
	// commentDescContent is the schema descriptor for content field.
	commentDescContent := commentFields[0].Descriptor()
	// comment.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	comment.ContentValidator = commentDescContent.Validators[0].(func(string) error)
	// commentDescID is the schema descriptor for id field.
	commentDescID := commentMixinFields1[0].Descriptor()
	// comment.DefaultID holds the default value on creation for the id field.
	comment.DefaultID = commentDescID.Default.(func() uuid.UUID)
	postMixin := schema.Post{}.Mixin()
	postMixinHooks2 := postMixin[2].Hooks()
	postMixinHooks3 := postMixin[3].Hooks()
	post.Hooks[0] = postMixinHooks2[0]
	post.Hooks[1] = postMixinHooks3[0]
	postMixinInters2 := postMixin[2].Interceptors()
	postMixinInters3 := postMixin[3].Interceptors()
	post.Interceptors[0] = postMixinInters2[0]
	post.Interceptors[1] = postMixinInters3[0]
	postMixinFields0 := postMixin[0].Fields()
	_ = postMixinFields0
	postMixinFields1 := postMixin[1].Fields()
	_ = postMixinFields1
	postFields := schema.Post{}.Fields()
	_ = postFields
	// postDescUpdatedAt is the schema descriptor for updated_at field.
	postDescUpdatedAt := postMixinFields0[0].Descriptor()
	// post.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	post.DefaultUpdatedAt = postDescUpdatedAt.Default.(func() time.Time)
	// post.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	post.UpdateDefaultUpdatedAt = postDescUpdatedAt.UpdateDefault.(func() time.Time)
	// postDescCreatedAt is the schema descriptor for created_at field.
	postDescCreatedAt := postMixinFields0[1].Descriptor()
	// post.DefaultCreatedAt holds the default value on creation for the created_at field.
	post.DefaultCreatedAt = postDescCreatedAt.Default.(func() time.Time)
	// postDescPinned is the schema descriptor for pinned field.
	postDescPinned := postFields[0].Descriptor()
	// post.DefaultPinned holds the default value on creation for the pinned field.
	post.DefaultPinned = postDescPinned.Default.(bool)
	// postDescLink is the schema descriptor for link field.
	postDescLink := postFields[3].Descriptor()
	// post.LinkValidator is a validator for the "link" field. It is called by the builders before save.
	post.LinkValidator = postDescLink.Validators[0].(func(string) error)
	// postDescIsModerated is the schema descriptor for is_moderated field.
	postDescIsModerated := postFields[5].Descriptor()
	// post.DefaultIsModerated holds the default value on creation for the is_moderated field.
	post.DefaultIsModerated = postDescIsModerated.Default.(bool)
	// postDescEntityVector is the schema descriptor for entity_vector field.
	postDescEntityVector := postFields[6].Descriptor()
	// post.DefaultEntityVector holds the default value on creation for the entity_vector field.
	post.DefaultEntityVector = postDescEntityVector.Default.(string)
	// postDescID is the schema descriptor for id field.
	postDescID := postMixinFields1[0].Descriptor()
	// post.DefaultID holds the default value on creation for the id field.
	post.DefaultID = postDescID.Default.(func() uuid.UUID)
	postcategoryMixin := schema.PostCategory{}.Mixin()
	postcategoryMixinFields0 := postcategoryMixin[0].Fields()
	_ = postcategoryMixinFields0
	postcategoryMixinFields1 := postcategoryMixin[1].Fields()
	_ = postcategoryMixinFields1
	postcategoryFields := schema.PostCategory{}.Fields()
	_ = postcategoryFields
	// postcategoryDescUpdatedAt is the schema descriptor for updated_at field.
	postcategoryDescUpdatedAt := postcategoryMixinFields0[0].Descriptor()
	// postcategory.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	postcategory.DefaultUpdatedAt = postcategoryDescUpdatedAt.Default.(func() time.Time)
	// postcategory.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	postcategory.UpdateDefaultUpdatedAt = postcategoryDescUpdatedAt.UpdateDefault.(func() time.Time)
	// postcategoryDescCreatedAt is the schema descriptor for created_at field.
	postcategoryDescCreatedAt := postcategoryMixinFields0[1].Descriptor()
	// postcategory.DefaultCreatedAt holds the default value on creation for the created_at field.
	postcategory.DefaultCreatedAt = postcategoryDescCreatedAt.Default.(func() time.Time)
	// postcategoryDescID is the schema descriptor for id field.
	postcategoryDescID := postcategoryMixinFields1[0].Descriptor()
	// postcategory.DefaultID holds the default value on creation for the id field.
	postcategory.DefaultID = postcategoryDescID.Default.(func() uuid.UUID)
	userMixin := schema.User{}.Mixin()
	user.Policy = privacy.NewPolicies(schema.User{})
	user.Hooks[0] = func(next ent.Mutator) ent.Mutator {
		return ent.MutateFunc(func(ctx context.Context, m ent.Mutation) (ent.Value, error) {
			if err := user.Policy.EvalMutation(ctx, m); err != nil {
				return nil, err
			}
			return next.Mutate(ctx, m)
		})
	}
	userMixinHooks2 := userMixin[2].Hooks()
	userHooks := schema.User{}.Hooks()

	user.Hooks[1] = userMixinHooks2[0]

	user.Hooks[2] = userHooks[0]
	userMixinInters2 := userMixin[2].Interceptors()
	user.Interceptors[0] = userMixinInters2[0]
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields1 := userMixin[1].Fields()
	_ = userMixinFields1
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[1].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescLastSeenAt is the schema descriptor for last_seen_at field.
	userDescLastSeenAt := userFields[6].Descriptor()
	// user.UpdateDefaultLastSeenAt holds the default value on update for the last_seen_at field.
	user.UpdateDefaultLastSeenAt = userDescLastSeenAt.UpdateDefault.(func() time.Time)
	// userDescID is the schema descriptor for id field.
	userDescID := userMixinFields1[0].Descriptor()
	// user.DefaultID holds the default value on creation for the id field.
	user.DefaultID = userDescID.Default.(func() uuid.UUID)
}

const (
	Version = "v0.14.1"                                         // Version of ent codegen.
	Sum     = "h1:fUERL506Pqr92EPHJqr8EYxbPioflJo6PudkrEA8a/s=" // Sum of ent codegen.
)
